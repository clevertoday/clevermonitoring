version: '3.1'

services:

  influx:
    build: ./influxdb
    image: clevertodayinc/influxdb:${BUILD_NUMBER}
    volumes:
      - "influx_data:/var/lib/influxdb"
    environment:
      - INFLUXDB_GRAPHITE_ENABLED=true
    ports:
      - "2003:2003"
    depends_on:
      - logstash
    logging: &logging
      driver: "gelf"
      options:
        gelf-address: "udp://localhost:12201"
    deploy:
      restart_policy:
        condition: on-failure

  influxgraph:
    build: ./influxgraph
    image: clevertodayinc/influxgraph:${BUILD_NUMBER}
    environment:
      - INFLUXDB_HOST=influx
    depends_on:
      - logstash
    logging: 
      <<: *logging
    deploy:
      restart_policy:
        condition: on-failure

  elasticsearch:
    image: elasticsearch:5-alpine
    volumes:
      - "es_data:/usr/share/elasticsearch/data"
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    deploy:
      restart_policy:
        condition: on-failure

  grafana:
    image: grafana/grafana:4.1.2
    volumes:
      - "grafana_data:/var/lib/grafana"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=Gr4f4n4
    depends_on:
      - elasticsearch
      - logstash
    logging:
      <<: *logging
    deploy:
      restart_policy:
        condition: on-failure

  kibana:
    image: kibana:5
    environment:
     - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
      - logstash
    logging:
      <<: *logging
    deploy:
      restart_policy:
        condition: on-failure

  logstash:
    image: logstash:5-alpine
    command: >
      -e "input { gelf { type => docker port => 12201 } } output { elasticsearch { hosts => 'elasticsearch' }}"
    ports:
      - "12201:12201"
      - "12201:12201/udp"
    depends_on:
      - elasticsearch
    deploy:
      restart_policy:
        condition: on-failure

  sensu-server:
    build: ./sensu
    image: clevertodayinc/sensu:${BUILD_NUMBER}
    command: server
    environment:
      - "REDIS_HOST=redis"
      - "INFLUXDB_HOST=influx"
      - "GRAPHITE_HOST=influx"
    depends_on:
      - influx
      - redis
      - logstash
    logging:
      <<: *logging
    deploy:
      restart_policy:
        condition: on-failure

  sensu-client:
    build: ./sensu
    image: clevertodayinc/sensu:${BUILD_NUMBER}
    command: client
    hostname: monitoring-agent
    environment:
      - "REDIS_HOST=redis"
    depends_on:
      - redis
      - logstash
    logging:
      <<: *logging
    deploy:
      restart_policy:
        condition: on-failure

  sensu-api:
    build: ./sensu
    image: clevertodayinc/sensu:${BUILD_NUMBER}
    command: api
    environment:
      - "REDIS_HOST=redis"
    depends_on:
      - redis
      - logstash
    logging:
      <<: *logging
    deploy:
      restart_policy:
        condition: on-failure

  uchiwa:
    build: ./uchiwa
    image: clevertodayinc/uchiwa:${BUILD_NUMBER}
    environment:
      - "SENSU_HOST=sensu-api"
      - "UCHIWA_USERNAME=uchiwa"
      - "UCHIWA_PASSWORD=S4suk3"
    depends_on:
      - sensu-api
      - logstash
    logging:
      <<: *logging
    deploy:
      restart_policy:
        condition: on-failure

  redis:
    image: redis:3-alpine
    depends_on:
      - logstash
    logging:
      <<: *logging
    deploy:
      restart_policy:
        condition: on-failure

  wpscan:
    build: ./wpscan
    image: clevertodayinc/wpscan-server:${BUILD_NUMBER}
    depends_on:
      - logstash
    logging:
      <<: *logging
    deploy:
      restart_policy:
        condition: on-failure

  arachni:
    build: ./arachni
    image: clevertodayinc/arachni-server:${BUILD_NUMBER}
    depends_on:
      - logstash
    logging:
      <<: *logging
    deploy:
      restart_policy:
        condition: on-failure

  yslow:
    build: ./yslow
    image: clevertodayinc/yslow-server:${BUILD_NUMBER}
    depends_on:
      - logstash
    logging:
      <<: *logging
    deploy:
      restart_policy:
        condition: on-failure

  web:
    build: ./proxy
    image: clevertodayinc/clevermonitoring-proxy:${BUILD_NUMBER}
    depends_on:
      - logstash
    logging:
      <<: *logging
    ports:
      - "80:80"
      - "443:443"
      - "8081:8081"
      - "8082:8082"
      - "8083:8083"
    depends_on:
      - grafana
      - kibana
      - elasticsearch
      - influx
      - uchiwa
    environment:
      - "DOMAIN=${DOMAIN}"
    deploy:
      restart_policy:
        condition: on-failure

volumes:
  influx_data:
    driver: local
  es_data:
    driver: local
  grafana_data:
    driver: local
